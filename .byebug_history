c
@current_holdings.select { |k,v| k == from_key }
@desired_holdings.select { |k,v| k == from_key }
@desired_holdings.select { |k,v| k == from_key && v == from_value }
n
s
n
s
n
s
n
s
c
to_key[0]
to_key.keys
to_key.value
to_key = @desired_holdings.select {|k, v| v == from_value }.first
c
@current_holdings
@desired_holdings
results
n
c
cash
@desired_holdings
@current_holdings
results
n
c
results
n
c
exchanges
expected
n
@current_holdings
n
@current_holdings
cash
n
from_value
s
@desired_holdings
@current_holdings
from_value
from_key
matched_holdings
n
s
n
c
(@desired_holdings.select { |k,v| k == :a && v == 20.0 })
(@desired_holdings.select { |k,v| k == :a && v == 10.0 })
(@desired_holdings.select { |k,v| k == :a && v == 5.0 })
(@desired_holdings.select { |k,v| k == :a && v == 5.0 }).size
@desired_holdings.select { |k,v| k == :a && v == 5.0 }
@desired_holdings
@current_holdings
Hash[(@current_holdings.to_a + @desired_holdings.to_a)]
Hash[*(@current_holdings.to_a + @desired_holdings.to_a)]
Hash[*(@current_holdings.to_a + @desired_holdings.to_a).flatten]
Hash(@current_holdings.to_a + @desired_holdings.to_a).flatten
@current_holdings + @desired_holdings
(@current_holdings.to_a + @desired_holdings.to_a).flatten
@current_holdings.to_a + @desired_holdings.to_a
Hash[*(@current_holdings.to_a + @desired_holdings.to_a).flatten]
Hash[*(@current_holdings.to_a - @desired_holdings.to_a).flatten]
Hash[*(@desired_holdings.to_a - @current_holdings.to_a).flatten]
@desired_holdings = { a: 20, b: 10 }
@current_holdings = { a: 10, b: 20 }
Hash[*(@desired_holdings.to_a - @current_holdings.to_a).flatten]
Hash[*(@desired_holdings.to_a - @current_holdings.to_a)].flatten
@desired_holdings.to_a - @current_holdings.to_a
@current_holdings.to_a - @desired_holdings.to_a
@current_holdings.to_a == @desired_holdings.to_a
@desired_holdings.to_a
@current_holdings.to_a
@current_holdings
@desired_holdings
@current_holdings == @desired_holdings
@current_holdings.class
c
@current_holdings - @desired_holdings
n
c
@desired_holdings.first
@desired_holdings[:b].value
@desired_holdings[:b]
@desired_holdings[:b].key
@desired_holdings[1]
@desired_holdings[0]
@desired_holdings
@desired_holdings[:b]
@desired_holdings[:a]
key
@desired_holdings
n
s
n
c
@desired_holdings
@current_holdings
Holdings.compare(@current_holdings, @desired_holdings)
c
equity
c
 current_holdings[:a]
 current_holdings[a]
 current_holdings[a:]
 current_holdings = { a: 1.0 }
c
Rebalance.new(current_holdings, desired_holdings).solution
Rebalance.new(current_holdings, desired_holdings)
s
c
e
n
e
s
@current_holdings
@current_holdings,
c
n
balanced_portfolio
s
c
value
found_holding
found_holding[value]
found_holding = desired_holdings[key]
desired_holdings[key]
s
n
s
current_holdings
c
@desired_holdings
@current_holdings
@current_holdings != @desired_holdings
c
@current_holdings
:a
c
BigDecimal.new(@current_holdings[:a])
@current_holdings[:a].class
@current_holdings[:a].type
@current_holdings[:a]
c
@current_holdings.keys
@current_holdings[:a]
@current_holdings
c
[{ from: 'A', to: 'B' }]
c
s
n
c
@current_holdings[:b]
@current_holdings[:a]
n
@current_holdings != @desired_holdings
@desired_holdings
@current_holdings
